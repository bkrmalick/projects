{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\bkrma\\\\Documents\\\\Career\\\\Personal Projects\\\\First Spring App\\\\aws-image-upload\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './style.css';\nimport Box from './Box';\nimport { PropTypes } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nfunction Game(props) {\n  const SIZE = 3 * 3;\n  const ROW_LENGTH = 3;\n  const INTERVAL = 1000;\n  const [audioCounter, setAudioCounter] = useState(0);\n  const [toggleStatus, setToggleStatus] = useState(true);\n  const audio1 = new Audio(require(`./sounds/attack1.mp3`));\n  audio1.volume = 0.1;\n  let startingArr = new Array(SIZE).fill(false);\n  startingArr[0] = true;\n  const [arr, setArr] = useState(startingArr);\n\n  function incScore() {\n    props.setScore(score => score + 1);\n    playAttackSound();\n  }\n\n  function playAttackSound() {\n    audio1.play();\n  }\n\n  function setClicked() {\n    incScore();\n  }\n\n  const meepImg = /*#__PURE__*/React.createElement(\"img\", {\n    id: \"meepImg\",\n    src: require(`./icons/meepo.png`),\n    alt: \"meepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  });\n  const [img, setImg] = useState(meepImg);\n\n  function toggleImg() {\n    const rand = Math.floor(Math.random() * SIZE) + 0;\n    let tempArr = new Array(SIZE).fill(false);\n    tempArr[rand] = true;\n    setArr(tempArr);\n  }\n\n  useEffect(() => {\n    if (toggleStatus) {\n      const interval = setInterval(toggleImg, INTERVAL);\n      return () => {\n        clearInterval(interval);\n      };\n    } //  else\n    //  {\n    //setImg(null);    \n    // }\n\n  }, [toggleStatus]); //any time file is changed, rerun the inner callback\n\n  function getTableBody() {\n    let count = 0;\n    let body = /*#__PURE__*/React.createElement(\"html\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }\n    });\n    /* for(let i=count;i<SIZE/ROW_LENGTH;i++)\r\n    {\r\n        body+=\r\n        arr.map((value,index)=>\r\n        {\r\n            return <div className=\"row\">\r\n            <Box id={index} currentState={()=>\r\n            {    \r\n                arr[index]=!value;\r\n                return value?null:meepImg;\r\n            }} setClicked={setClicked}/>\r\n            </div>;\r\n        });\r\n    } */\n\n    return body;\n  }\n\n  function Dropzone() {\n    const onDrop = useCallback(acceptedFiles => {\n      setFile(acceptedFiles[0]);\n    }, []);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop\n    });\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Drop it like it's hot\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }\n    }, \"Image:\"), \" Drag 'n' drop profile image here, or click to select\"));\n  }\n\n  let toRetun = /*#__PURE__*/React.createElement(\"div\", {\n    id: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    id: 0,\n    currentState: arr[0] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 1,\n    currentState: arr[1] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 2,\n    currentState: arr[2] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    id: 3,\n    currentState: arr[3] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 4,\n    currentState: arr[4] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 5,\n    currentState: arr[5] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    id: 6,\n    currentState: arr[6] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 7,\n    currentState: arr[7] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 8,\n    currentState: arr[8] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, \"Score: \", score), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 28\n    }\n  }));\n  return toRetun;\n}\n\nexport default Game;","map":{"version":3,"sources":["D:/Users/bkrma/Documents/Career/Personal Projects/First Spring App/aws-image-upload/src/main/frontend/src/components/Game/Game.js"],"names":["React","useEffect","useState","useCallback","Box","PropTypes","useDropzone","Game","props","SIZE","ROW_LENGTH","INTERVAL","audioCounter","setAudioCounter","toggleStatus","setToggleStatus","audio1","Audio","require","volume","startingArr","Array","fill","arr","setArr","incScore","setScore","score","playAttackSound","play","setClicked","meepImg","img","setImg","toggleImg","rand","Math","floor","random","tempArr","interval","setInterval","clearInterval","getTableBody","count","body","Dropzone","onDrop","acceptedFiles","setFile","getRootProps","getInputProps","isDragActive","toRetun"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useCallback } from 'react'\r\nimport './style.css'\r\nimport Box from './Box'\r\nimport { PropTypes } from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nfunction Game(props)\r\n{\r\n    const SIZE=3*3;\r\n    const ROW_LENGTH=3;\r\n    const INTERVAL=1000;\r\n    const [audioCounter, setAudioCounter]=useState(0);\r\n\r\n    \r\n    const [toggleStatus, setToggleStatus]= useState(true);\r\n\r\n    const audio1= new Audio(require(`./sounds/attack1.mp3`));\r\n\r\n    audio1.volume=0.1;\r\n\r\n    let startingArr=new Array(SIZE).fill(false);\r\n    startingArr[0]=true;\r\n\r\n    const [arr, setArr]= useState(startingArr);\r\n\r\n    function incScore()\r\n    {\r\n        props.setScore(score=>score+1);\r\n        playAttackSound();\r\n    }\r\n    \r\n    function playAttackSound()\r\n    {\r\n        audio1.play();\r\n    }\r\n\r\n    function setClicked()\r\n    {\r\n        incScore();\r\n    }\r\n\r\n    const meepImg=<img id =\"meepImg\" src={require(`./icons/meepo.png`)} alt=\"meepo\" />;\r\n\r\n    const [img,setImg]= useState(meepImg);\r\n\r\n    function toggleImg()\r\n    {\r\n         const rand=Math.floor(Math.random() * (SIZE)) + 0; \r\n         let tempArr=new Array(SIZE).fill(false);\r\n         tempArr[rand]=true;\r\n         \r\n         setArr(tempArr);\r\n    }\r\n\r\n    \r\n    useEffect(() => \r\n    {\r\n        if(toggleStatus)\r\n        {\r\n            const interval = setInterval(toggleImg, INTERVAL);\r\n            return () => {\r\n                            clearInterval(interval);\r\n                        };\r\n        }\r\n      //  else\r\n      //  {\r\n            //setImg(null);    \r\n       // }\r\n    }, [toggleStatus]); //any time file is changed, rerun the inner callback\r\n\r\n\r\n\r\n    function getTableBody()\r\n    {\r\n        let count=0;\r\n        let body=<html></html>;\r\n\r\n        /* for(let i=count;i<SIZE/ROW_LENGTH;i++)\r\n        {\r\n            body+=\r\n            arr.map((value,index)=>\r\n            {\r\n                return <div className=\"row\">\r\n                <Box id={index} currentState={()=>\r\n                {    \r\n                    arr[index]=!value;\r\n                    return value?null:meepImg;\r\n                }} setClicked={setClicked}/>\r\n                </div>;\r\n            });\r\n        } */\r\n      \r\n        return body;\r\n    }\r\n\r\n    \r\n\r\n    function Dropzone() {\r\n        const onDrop = useCallback(acceptedFiles => {\r\n          setFile(acceptedFiles[0]);\r\n      \r\n        }, [])\r\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n        return (\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {\r\n              isDragActive ?\r\n                <p>Drop it like it's hot</p> :\r\n                <p><span className=\"bold\">Image:</span> Drag 'n' drop profile image here, or click to select</p>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n\r\n    let toRetun=<div id=\"game\">\r\n    <div className=\"border\">\r\n        <div className=\"row\">\r\n            <Box id={0} currentState={arr[0]?img:null} setClicked={setClicked}/>\r\n            <Box id={1} currentState={arr[1]?img:null} setClicked={setClicked}/>\r\n            <Box id={2} currentState={arr[2]?img:null} setClicked={setClicked}/>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <Box id={3} currentState={arr[3]?img:null} setClicked={setClicked}/>\r\n            <Box id={4} currentState={arr[4]?img:null} setClicked={setClicked}/>\r\n            <Box id={5} currentState={arr[5]?img:null} setClicked={setClicked}/>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <Box id={6} currentState={arr[6]?img:null} setClicked={setClicked}/>\r\n            <Box id={7} currentState={arr[7]?img:null} setClicked={setClicked}/>\r\n            <Box id={8} currentState={arr[8]?img:null} setClicked={setClicked}/>\r\n        </div>\r\n    </div>\r\n    <h2>Score: {score}</h2><br/>\r\n</div>;\r\n\r\n    return toRetun;\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}