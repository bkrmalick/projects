{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\bkrma\\\\Documents\\\\Career\\\\Personal Projects\\\\First Spring App\\\\aws-image-upload\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport './style.css';\nimport Box from './Box';\nimport { PropTypes } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nfunction Game(props) {\n  const SIZE = 3 * 3;\n  const ROW_LENGTH = 3;\n  const INTERVAL = 1000;\n  let file = null;\n  const [name, setName] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const audio1 = new Audio(require(`./sounds/attack1.mp3`));\n  audio1.volume = 0.1;\n  let startingArr = new Array(SIZE).fill(false);\n  startingArr[0] = true;\n  const [arr, setArr] = useState(startingArr);\n  const [error, setError] = useState(\"\");\n\n  function incScore() {\n    setScore(score => score + 1);\n    playAttackSound();\n  }\n\n  function playAttackSound() {\n    audio1.play();\n  }\n\n  function setClicked() {\n    incScore();\n  }\n\n  const meepImg = /*#__PURE__*/React.createElement(\"img\", {\n    id: \"meepImg\",\n    src: require(`./icons/meepo.png`),\n    alt: \"meepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  });\n  const [img, setImg] = useState(meepImg);\n\n  function toggleImg() {\n    const rand = Math.floor(Math.random() * SIZE) + 0;\n    let tempArr = new Array(SIZE).fill(false);\n    tempArr[rand] = true;\n    if (file == null) setArr(tempArr);\n  }\n\n  useEffect(() => {\n    const interval = setInterval(toggleImg, INTERVAL);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [img]);\n\n  function getTableBody() {\n    let count = 0;\n    let body = /*#__PURE__*/React.createElement(\"html\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }\n    });\n    /* for(let i=count;i<SIZE/ROW_LENGTH;i++)\r\n    {\r\n        body+=\r\n        arr.map((value,index)=>\r\n        {\r\n            return <div className=\"row\">\r\n            <Box id={index} currentState={()=>\r\n            {    \r\n                arr[index]=!value;\r\n                return value?null:meepImg;\r\n            }} setClicked={setClicked}/>\r\n            </div>;\r\n        });\r\n    } */\n\n    return body;\n  }\n\n  function saveScore(e) {\n    e.preventDefault();\n\n    if (name.length < 2) {\n      setError(\"Name cannot be less than 2 characters\");\n      return;\n    } else if (score == 0) {\n      setError(\"Try scoring something first...\");\n      return;\n    } else {\n      console.log(\"INNER FILE: \" + file);\n      props.saveScore(score, name, file).then(error => setError(error));\n    }\n  }\n\n  function Dropzone() {\n    const onDrop = useCallback(acceptedFiles => {\n      file = acceptedFiles[0];\n      console.log(file);\n      /*let formData = new FormData();\r\n      formData.append(\"file\",file);\r\n              axios.post(\r\n        `http://localhost:8080/api/v1/user-profile/${userProfileID}/image/upload`, formData, {headers: {'Content-Type': 'multipart/form-data'}      }\r\n      ).then(resp=>{console.log(resp); window.location.reload(true);}).catch(err=>console.log(err));*/\n    }, []);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop\n    });\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Drop it like it's hot\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 20\n      }\n    }, \"Image:\"), \" Drag 'n' drop profile image, or click to select\"));\n  }\n\n  let toRetun = /*#__PURE__*/React.createElement(\"div\", {\n    id: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    id: 0,\n    currentState: arr[0] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 1,\n    currentState: arr[1] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 2,\n    currentState: arr[2] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    id: 3,\n    currentState: arr[3] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 4,\n    currentState: arr[4] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 5,\n    currentState: arr[5] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    id: 6,\n    currentState: arr[6] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 7,\n    currentState: arr[7] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    id: 8,\n    currentState: arr[8] ? img : null,\n    setClicked: setClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, \"Score: \", score), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: saveScore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fname\",\n    name: \"fname\",\n    onChange: e => {\n      setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 104\n    }\n  }), /*#__PURE__*/React.createElement(Dropzone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Save Score\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, error)));\n  return toRetun;\n}\n\nexport default Game;","map":{"version":3,"sources":["D:/Users/bkrma/Documents/Career/Personal Projects/First Spring App/aws-image-upload/src/main/frontend/src/components/Game/Game.js"],"names":["React","useEffect","useState","useCallback","Box","PropTypes","useDropzone","Game","props","SIZE","ROW_LENGTH","INTERVAL","file","name","setName","score","setScore","audio1","Audio","require","volume","startingArr","Array","fill","arr","setArr","error","setError","incScore","playAttackSound","play","setClicked","meepImg","img","setImg","toggleImg","rand","Math","floor","random","tempArr","interval","setInterval","clearInterval","getTableBody","count","body","saveScore","e","preventDefault","length","console","log","then","Dropzone","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","toRetun","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useCallback } from 'react'\r\nimport './style.css'\r\nimport Box from './Box'\r\nimport { PropTypes } from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nfunction Game(props)\r\n{\r\n    const SIZE=3*3;\r\n    const ROW_LENGTH=3;\r\n    const INTERVAL=1000;\r\n    let file=null;\r\n\r\n    const [name, setName] =useState(\"\");\r\n    const [score, setScore]= useState(0);\r\n\r\n    const audio1= new Audio(require(`./sounds/attack1.mp3`));\r\n    audio1.volume=0.1;\r\n\r\n    let startingArr=new Array(SIZE).fill(false);\r\n    startingArr[0]=true;\r\n\r\n    const [arr, setArr]= useState(startingArr);\r\n\r\n    const [error,setError] = useState(\"\");\r\n\r\n    function incScore()\r\n    {\r\n        setScore(score=>score+1);\r\n        playAttackSound();\r\n    }\r\n    \r\n    function playAttackSound()\r\n    {\r\n        audio1.play();\r\n    }\r\n\r\n    function setClicked()\r\n    {\r\n        incScore();\r\n    }\r\n\r\n\r\n    const meepImg=<img id =\"meepImg\" src={require(`./icons/meepo.png`)} alt=\"meepo\" />;\r\n\r\n    const [img,setImg]= useState(meepImg);\r\n\r\n    function toggleImg()\r\n    {\r\n         const rand=Math.floor(Math.random() * (SIZE)) + 0; \r\n         let tempArr=new Array(SIZE).fill(false);\r\n         tempArr[rand]=true;\r\n         \r\n         if(file==null)\r\n            setArr(tempArr);\r\n    }\r\n\r\n    \r\n    useEffect(() => \r\n    {\r\n        const interval = setInterval(toggleImg, INTERVAL);\r\n        return () => {\r\n                         clearInterval(interval);\r\n                    };\r\n    }, [img]);\r\n\r\n\r\n\r\n    function getTableBody()\r\n    {\r\n        let count=0;\r\n        let body=<html></html>;\r\n\r\n        /* for(let i=count;i<SIZE/ROW_LENGTH;i++)\r\n        {\r\n            body+=\r\n            arr.map((value,index)=>\r\n            {\r\n                return <div className=\"row\">\r\n                <Box id={index} currentState={()=>\r\n                {    \r\n                    arr[index]=!value;\r\n                    return value?null:meepImg;\r\n                }} setClicked={setClicked}/>\r\n                </div>;\r\n            });\r\n        } */\r\n      \r\n        return body;\r\n    }\r\n\r\n    function saveScore(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        if(name.length<2)\r\n        {\r\n            setError(\"Name cannot be less than 2 characters\");\r\n            return;\r\n        }\r\n        else if(score==0)\r\n        {\r\n            setError(\"Try scoring something first...\");\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            console.log(\"INNER FILE: \"+file);\r\n            props.saveScore(score,name,file).then(error=>setError(error));\r\n        }\r\n    }\r\n\r\n    function Dropzone() {\r\n        const onDrop = useCallback(acceptedFiles => {\r\n          file = acceptedFiles[0];\r\n          \r\n          console.log(file);\r\n          \r\n          /*let formData = new FormData();\r\n          formData.append(\"file\",file);\r\n      \r\n          axios.post(\r\n            `http://localhost:8080/api/v1/user-profile/${userProfileID}/image/upload`, formData, {headers: {'Content-Type': 'multipart/form-data'}      }\r\n          ).then(resp=>{console.log(resp); window.location.reload(true);}).catch(err=>console.log(err));*/\r\n      \r\n        }, [])\r\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n      \r\n        return (\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {\r\n              isDragActive ?\r\n                <p>Drop it like it's hot</p> :\r\n                <p><span className=\"bold\">Image:</span> Drag 'n' drop profile image, or click to select</p>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n\r\n    let toRetun=<div id=\"game\">\r\n    <div className=\"border\">\r\n        <div className=\"row\">\r\n            <Box id={0} currentState={arr[0]?img:null} setClicked={setClicked}/>\r\n            <Box id={1} currentState={arr[1]?img:null} setClicked={setClicked}/>\r\n            <Box id={2} currentState={arr[2]?img:null} setClicked={setClicked}/>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <Box id={3} currentState={arr[3]?img:null} setClicked={setClicked}/>\r\n            <Box id={4} currentState={arr[4]?img:null} setClicked={setClicked}/>\r\n            <Box id={5} currentState={arr[5]?img:null} setClicked={setClicked}/>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <Box id={6} currentState={arr[6]?img:null} setClicked={setClicked}/>\r\n            <Box id={7} currentState={arr[7]?img:null} setClicked={setClicked}/>\r\n            <Box id={8} currentState={arr[8]?img:null} setClicked={setClicked}/>\r\n        </div>\r\n    </div>\r\n    <h2>Score: {score}</h2><br/>\r\n    <form  onSubmit={saveScore}>\r\n          <label className=\"bold\">Name: </label>\r\n          <input type=\"text\" id=\"fname\" name=\"fname\" onChange={(e)=>{setName(e.target.value)}}></input><br></br>\r\n          <Dropzone/>\r\n          <button type=\"submit\" >Save Score</button>\r\n          <p className=\"error\">{error}</p>\r\n    </form> \r\n</div>;\r\n\r\n    return toRetun;\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}